version: "3.5"

services:
  sonarqube:
    container_name: sonarqube
    build: .
    ports:
      - 9000:9000
    depends_on:
      - es01
    restart: always

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    container_name: es01
    environment:
      - node.name=es01
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01,es02
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./esdata01:/usr/share/elasticsearch/data
    restart: always

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    container_name: es02
    environment:
      - node.name=es02
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01,es02
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./esdata02:/usr/share/elasticsearch/data
    restart: always

  jenkins:
    container_name: jenkins
    build:
      context: ./jenkins-docker
      dockerfile: Dockerfile
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
      - ./app/data/jenkins_home:/var/jenkins_home
      - ./app/config/executors.groovy:/usr/share/jenkins/ref/init.groovy.d/executors.groovy
    restart: always
